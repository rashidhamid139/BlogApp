trigger:
  batch: true
  branches:
    include:
      - master
      - releases/*
    exclude: -develop

jobs:
  - job: myJob
    timeoutInMinutes: 10
    pool:
      vmImage: "ubuntu16.04"
    steps:
      - bash: echo "Hello World"

  - job: string
    displyName: string
    dependsOn: string | [ string ]
    condition: string
    strategy:
      parallel: #paralled strategy
      matrix:
      maxParallel: number #maximum number of simaltaneous matrix legs to run
      #note: parallel and matrix are mutually exclusive
      # you may specify one or the other; including both is an error
      # maxParallel is only valid with matrix

    continueOnError: boolean # 'true' if future jobs should run even if this job fails; default to 'false'
    pool: pool #agent pool

  #Deployement Job
  - deployment: string
    pool:
      name: string
      demands: string | [ string ]
    environment: string
    strategy:
      runOnce:
        deploy:
          steps:
            - script: echo 'Hi'

#agent pool job

pool: #singel demand
  name: myPrivateAgents
  demands:
    - agent.os -equals somethingElse
  steps:
    - script: echo Hello World


pool: #multiple demands
  name: myPrivateAgents
  demands:
  - agent.os -equals Darwin
  - anotherCapability -equals somethingElse
steps:
- script: echo "Hello World"


#conditional jobs
jobs:
- job: A
  steps: 
    - script: exit 1

- job: B
  dependsOn: A
  condition: failed()
  steps:
    - script: echo "this will run when A fails"

- job: C
  dependsOn:
  - A
  - B
  condition: succeeded( 'B')
  steps:
    - script: echo this will run when B runs and succeeds


